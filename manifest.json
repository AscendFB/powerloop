{
 "package": "powerloop",
 "language": "python",
 "author": "rdegosse",
 "description": "[FARMWARE] PowerLoop for Farmbot OS: Loop your farmbot by plants with search filters, or by automatic waypoint calculation to cover Plant search results grid area. Features include executing sequences and saving meta data.",
 "version": "1.0.0",
 "min_os_version_major": 7,
 "url": "https://raw.githubusercontent.com/amerkay/powerloop/master/manifest.json",
 "zip": "https://github.com/amerkay/powerloop/archive/master.zip",
 "executable": "python",
 "args": ["powerloop-master/powerloop/main.py"],
 "config": [
  {"name": "pointname", "label": "Filter by plant name, case insensitive, uses string contains. 'aru' matches 'Arugula', * for all", "value": "*"},
  {"name": "openfarm_slug", "label": "Filter by Openfarm slug name", "value": "*"},
  {"name": "age_min_day", "label": "Filter by plant age (minimum days)", "value": "-1"},
  {"name": "age_max_day", "label": "Filter by plant age (maximum days)", "value": "36500"},
  {"name": "filter_meta_key", "label": "Filter by meta data : key", "value": "None"},
  {"name": "filter_meta_op", "label": "Filter by meta data : operator (==,!=,>,<,>=,<=,regex,daysmin,daysmax,minutesmin,minutesmax)", "value": "=="},
  {"name": "filter_meta_value", "label": "Filter by meta data : value", "value": "None"},
  {"name": "filter_plant_stage", "label": "Filter by plant stage (none,planned,planted,sprouted,harvested)", "value": "None"},
  {"name": "filter_min_x", "label": "Filter by coordinates - Min X", "value": "None"},
  {"name": "filter_max_x", "label": "Filter by coordinates - Max X", "value": "None"},
  {"name": "filter_min_y", "label": "Filter by coordinates - Min Y", "value": "None"},
  {"name": "filter_max_y", "label": "Filter by coordinates - Max Y", "value": "None"},
  {"name": "sequence_init", "label": "Init Sequences Name - one time - (multiple: Seq1,Seq2,...)", "value": "None"},
  {"name": "sequence_beforemove", "label": "Sequences Name Before Next Move - for each plant - (multiple: Seq1,Seq2,...)", "value": "None"},
  {"name": "sequence_aftermove", "label": "Sequences Name After Move - for each plant - (multiple: Seq1,Seq2,...)", "value": "None"},
  {"name": "sequence_end", "label": "End Sequences Name - one time - (multiple: Seq1,Seq2,...)", "value": "None"},
  {"name": "save_meta_key", "label": "Save in meta data : key", "value": "None"},
  {"name": "save_meta_value", "label": "Save in meta data : value (str / #NOW#)", "value": "None"},
  {"name": "save_plant_stage", "label": "Set plant stage (none,planned,planted,sprouted,harvested)", "value": "None"},
  {"name": "offset_x", "label": "Offset X value when moving - (integer, randint(i,j))", "value": 0},
  {"name": "offset_y", "label": "Offset Y value when moving - (integer, randint(i,j))", "value": 0},
  {"name": "default_z", "label": "Default Z axis value when moving", "value": 0},
  {"name": "default_speed", "label": "Default speed value when moving", "value": 800},
  {"name": "use_tsp_greedy", "label": "Use Travelling Salesman Problem Greedy algorithm to optimize route? If 'yes', no quotes, TSP Greedy Algorithm will be used", "value": "True"},
  {"name": "grid_coverage_per_step", "label": "Grid coverage (x, y) per step. E.g for camera field of view enter '(200, 280). ALWAYS set value in sequence setup.', no quotes.", "value": "None"},
  {"name": "debug", "label": "Debug (0-> No FW debug msg, 1-> FW debug msg, 2-> No Move/exec and FW debug msg only)", "value": 1}
  ]
}
